version: '3.9'

services:
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - user-service
      - team-service
      - project-service
      - notification-service
    networks:
      - app-network
    env_file:
      - .env

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "8001:8000"
    networks:
      - app-network
    depends_on:
      - postgres
    env_file:
      - .env
      - ./auth-service/.env

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: user-service
    ports:
      - "8002:8000"
    networks:
      - app-network
    depends_on:
      - postgres
    env_file:
      - .env
      - ./user-service/.env

  team-service:
    build:
      context: .
      dockerfile: team-service/Dockerfile
    container_name: team-service
    ports:
      - "8003:8000"
    networks:
      - app-network
    depends_on:
      - mongodb
    env_file:
      - .env
      - ./team-service/.env

  project-service:
    build:
      context: .
      dockerfile: project-service/Dockerfile
    container_name: project-service
    ports:
      - "8004:8000"
    networks:
      - app-network
    depends_on:
      - mongodb
    env_file:
      - .env
      - ./project-service/.env

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: notification-service
    ports:
      - "8005:8000"
    networks:
      - app-network
    depends_on:
      - mongodb
    env_file:
      - .env
      - ./notification-service/.env

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    env_file:
      - .env

  mongodb:
    image: mongo:6
    container_name: mongodb
    command: mongod --quiet --logpath /dev/null
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    env_file:
      - .env

volumes:
  postgres_data:
  mongo_data:

networks:
  app-network:
    driver: bridge
